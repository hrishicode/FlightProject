{"remainingRequest":"C:\\FlightProject\\flight-search\\node_modules\\babel-loader\\lib\\index.js!C:\\FlightProject\\flight-search\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\FlightProject\\flight-search\\src\\common\\services\\FlightApi.js","dependencies":[{"path":"C:\\FlightProject\\flight-search\\src\\common\\services\\FlightApi.js","mtime":1625740672483},{"path":"C:\\FlightProject\\flight-search\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\FlightProject\\flight-search\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\FlightProject\\flight-search\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGFwaUNvbmZpZyBmcm9tICcuL0FwaUNvbmZpZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRBaXJwb3J0czogZnVuY3Rpb24gZ2V0QWlycG9ydHMoKSB7CiAgICB2YXIgdG9rZW4gPSBhcGlDb25maWcuY29uZmlndXJhdGlvbi50ZW5hbnRJZDsKICAgIHJldHVybiBheGlvcy5nZXQoYXBpQ29uZmlnLmNvbmZpZ3VyYXRpb24uYXBpVXJsLCB7CiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnVGVuYW50LUlkZW50aWZpZXInOiAiIi5jb25jYXQodG9rZW4pLAogICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEuYWlycG9ydHM7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["C:/FlightProject/flight-search/src/common/services/FlightApi.js"],"names":["axios","apiConfig","getAirports","token","configuration","tenantId","get","apiUrl","headers","then","response","data","airports"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe;AACbC,EAAAA,WADa,yBACE;AACb,QAAMC,KAAK,GAAGF,SAAS,CAACG,aAAV,CAAwBC,QAAtC;AACA,WAAOL,KAAK,CAACM,GAAN,CAAUL,SAAS,CAACG,aAAV,CAAwBG,MAAlC,EAA0C;AAC/CC,MAAAA,OAAO,EAAE;AACP,uCAAwBL,KAAxB,CADO;AAEP,uCAA+B;AAFxB;AADsC,KAA1C,EAKJM,IALI,CAKC,UAACC,QAAD,EAAc;AACpB,aAAOA,QAAQ,CAACC,IAAT,CAAcC,QAArB;AACD,KAPM,CAAP;AAQD;AAXY,CAAf","sourcesContent":["import axios from 'axios'\r\nimport apiConfig from './ApiConfig'\r\n\r\nexport default {\r\n  getAirports () {\r\n    const token = apiConfig.configuration.tenantId\r\n    return axios.get(apiConfig.configuration.apiUrl, {\r\n      headers: {\r\n        'Tenant-Identifier': `${token}`,\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    }).then((response) => {\r\n      return response.data.airports\r\n    })\r\n  }\r\n}\r\n"]}]}